{"version":3,"sources":["replicant/dom.cljs"],"mappings":"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","names":["replicant.dom/remove-listener","el","event","opt","temp__5823__auto__","old-handler","G__36644","cljs.core/clj->js","replicant.dom/on-next-frame","f","js/requestAnimationFrame","replicant.dom/-on-transition-end","vec__36645","cljs.core.nth","n","dur","js/window.getComputedStyle","replicant.transition/get-transition-stats","cljs.core._EQ_","complete","cljs.core/volatile!","timer","started","js/Date","callback","_args","cn","listener","cljs.core/deref","js/clearTimeout","cljs.core/vreset!","js/setTimeout","replicant.dom/memories","js/WeakMap","replicant.dom/create-renderer","replicant.dom/t_replicant$dom36648","_this","text","js/document.createTextNode","tag-name","options","temp__5821__auto__","ns","js/document.createElementNS","js/document.createElement","this","style","v","cljs.core/name","attr","handler","child-node","reference-node","insert-child","replace-child","idx","node","memory","js/replicant","js/replicant.dom","js/replicant.dom.state","replicant.dom/state","var_args","args__5755__auto__","len__5749__auto__","i__5750__auto__","argseq__5756__auto__","cljs.core/IndexedSeq","replicant.dom/render","p__36654","vec__36655","map__36658","cljs.core/--destructure-map","cljs.core.get","seq36651","G__36652","cljs.core/first","cljs.core/next","G__36653","self__5734__auto__","hiccup","aliases","alias-data","rendering?","cljs.core.get_in","cljs.core/contains?","cljs.core.assoc","fn__34883__auto__","replicant.assert/current-context","alias__34884__auto__","fd__34885__auto__","cljs.core/reset!","replicant.assert/error","G__36659","or__5025__auto__","replicant.assert/current-node","cljs.core/assoc-in","map__36660","map__36661","renderer","current","unmounts","replicant.alias/get-registered-aliases","hiccup__34801__auto__","cljs.core/vector?","cljs.core/map?","cljs.core/second","cljs.core.update_in","k__34802__auto__","cljs.core.into","cljs.core/rest","vdom","replicant.core.reconcile","cljs.core.update","cljs.core/merge","pending","cljs.core/dissoc","replicant.dom/unmount","cljs.core.dissoc","replicant.dom/set-dispatch!","replicant.core/*dispatch*"],"sourcesContent":["(ns replicant.dom\n  (:require [replicant.alias :as alias]\n            [replicant.asserts :as asserts]\n            [replicant.core :as r]\n            [replicant.env :as env]\n            [replicant.errors :as errors]\n            [replicant.protocols :as replicant]\n            [replicant.transition :as transition]))\n\n(defn ^:no-doc remove-listener [^js/EventTarget el event opt]\n  (when-let [old-handler (some-> el .-replicantHandlers (aget event))]\n    (.removeEventListener el event old-handler (clj->js opt))))\n\n(defn ^:no-doc on-next-frame [f]\n  (js/requestAnimationFrame\n   #(js/requestAnimationFrame f)))\n\n(defn ^:no-doc -on-transition-end [el f]\n  (let [[n dur] (-> (js/window.getComputedStyle el)\n                    (.getPropertyValue \"transition-duration\")\n                    transition/get-transition-stats)]\n    (if (= n 0)\n      (f)\n      (let [complete (volatile! 0)\n            timer (volatile! nil)\n            started (js/Date.)\n            callback (fn listener [& _args]\n                       (let [cn (vswap! complete inc)]\n                         (when (or (<= n cn)\n                                   (< dur (- (js/Date.) started)))\n                           (.removeEventListener el \"transitionend\" listener)\n                           (js/clearTimeout @timer)\n                           (f))))]\n        (.addEventListener el \"transitionend\" callback)\n        ;; The timer is a fail-safe. You could have set transition properties\n        ;; that either don't change, or don't change in a way that triggers an\n        ;; actual transition on unmount (e.g. changing height from auto to 0\n        ;; causes no transition). When this happens, there will not be as many\n        ;; transitionend events as there are transition durations. To avoid\n        ;; getting stuck, the timer will come in and clean up.\n        ;;\n        ;; The timer is set with a hefty delay to avoid cutting a transition\n        ;; short, in the case of a backed up browser working on overtime. Not\n        ;; sure how realistic this is, but better safe than sorry, and the\n        ;; important part is that the element doesn't get stuck forever.\n        (vreset! timer (js/setTimeout callback (+ dur 200)))))))\n\n(def ^:no-doc memories (js/WeakMap.))\n\n(defn ^:no-doc create-renderer []\n  (reify\n    replicant/IRender\n    (create-text-node [_this text]\n      (js/document.createTextNode text))\n\n    (create-element [_this tag-name options]\n      (if-let [ns (:ns options)]\n        (js/document.createElementNS ns tag-name)\n        (js/document.createElement tag-name)))\n\n    (set-style [this ^js el style v]\n      (.setProperty (.-style el) (name style) v)\n      this)\n\n    (remove-style [this ^js el style]\n      (.removeProperty (.-style el) (name style))\n      this)\n\n    (add-class [this ^js el cn]\n      (.add (.-classList el) cn)\n      this)\n\n    (remove-class [this ^js el cn]\n      (.remove (.-classList el) cn)\n      this)\n\n    (set-attribute [this ^js el attr v opt]\n      (errors/with-error-handling \"setting attribute\" {:el el :attr attr :v v}\n        (cond\n          (= \"innerHTML\" attr)\n          (set! (.-innerHTML el) v)\n\n          (= \"value\" attr)\n          (set! (.-value el) v)\n\n          (= \"default-value\" attr)\n          (.setAttribute el \"value\" v)\n\n          (= \"selected\" attr)\n          (set! (.-selected el) v)\n\n          (= \"default-selected\" attr)\n          (.setAttribute el \"selected\" v)\n\n          (= \"checked\" attr)\n          (set! (.-checked el) v)\n\n          (= \"default-checked\" attr)\n          (.setAttribute el \"checked\" v)\n\n          (:ns opt)\n          (.setAttributeNS el (:ns opt) attr v)\n\n          :else\n          (.setAttribute el attr v)))\n      this)\n\n    (remove-attribute [this ^js el attr]\n      (cond\n        (= \"innerHTML\" attr)\n        (set! (.-innerHTML el) \"\")\n\n        (= \"value\" attr)\n        (set! (.-value el) nil)\n\n        (= \"default-value\" attr)\n        (.removeAttribute el \"value\")\n\n        (= \"selected\" attr)\n        (set! (.-selected el) nil)\n\n        (= \"default-selected\" attr)\n        (.removeAttribute el \"selected\")\n\n        (= \"checked\" attr)\n        (set! (.-checked el) nil)\n\n        (= \"default-checked\" attr)\n        (.removeAttribute el \"checked\")\n\n        :else\n        (.removeAttribute el attr))\n      this)\n\n    (set-event-handler [this ^js/EventTarget el event handler opt]\n      (when-not (.-replicantHandlers el)\n        (set! (.-replicantHandlers el) #js {}))\n      (let [event (name event)]\n        (remove-listener el event opt)\n        (aset (.-replicantHandlers el) event handler)\n        (.addEventListener el event handler (clj->js opt)))\n      this)\n\n    (remove-event-handler [this ^js/EventTarget el event opt]\n      (let [event (name event)]\n        (remove-listener el event opt)\n        (aset (.-replicantHandlers el) event nil))\n      this)\n\n    (append-child [this ^js el child-node]\n      (.appendChild el child-node)\n      this)\n\n    (insert-before [this ^js el child-node reference-node]\n      (.insertBefore el child-node reference-node)\n      this)\n\n    (remove-child [this ^js el child-node]\n      (.removeChild el child-node)\n      this)\n\n    (on-transition-end [this ^js el f]\n      (-on-transition-end el f)\n      this)\n\n    (replace-child [this ^js el insert-child replace-child]\n      (.replaceChild el insert-child replace-child)\n      this)\n\n    (remove-all-children [this ^js el]\n      (set! (.-textContent el) \"\")\n      this)\n\n    (get-child [_this ^js el idx]\n      (aget (.-childNodes el) idx))\n\n    (next-frame [_this f]\n      (on-next-frame f))\n\n    replicant/IMemory\n    (remember [_this ^js node memory]\n      (.set ^js memories node memory))\n\n    (recall [_this ^js node]\n      (.get ^js memories node))))\n\n(defonce ^:no-doc state (volatile! {}))\n\n(defn ^:export render\n  \"Render `hiccup` in DOM element `el`. Replaces any pre-existing content not\n  created by this function. Subsequent calls with the same `el` will update the\n  rendered DOM by comparing `hiccup` to the previous `hiccup`. `hiccup` can be\n  either a single hiccup node, or a list of multiple nodes.\"\n  [^js el hiccup & [{:keys [aliases alias-data]}]]\n  (let [rendering? (get-in @state [el :rendering?])]\n    (when-not (contains? @state el)\n      (set! (.-innerHTML el) \"\")\n      (vswap! state assoc el {:renderer (create-renderer)\n                              :unmounts (volatile! #{})\n                              :rendering? true}))\n    (if rendering?\n      (do\n        (asserts/assert-no-nested-renders)\n        (vswap! state assoc-in [el :queued] hiccup))\n      (do\n        (vswap! state assoc-in [el :rendering?] true)\n        (let [{:keys [renderer current unmounts]} (get @state el)\n              aliases (or aliases (alias/get-registered-aliases))\n              hiccup (if alias-data\n                       (env/with-dev-key hiccup [aliases alias-data])\n                       (env/with-dev-key hiccup aliases))\n              {:keys [vdom]} (r/reconcile renderer el hiccup current {:unmounts unmounts\n                                                                      :aliases aliases\n                                                                      :alias-data alias-data})]\n          (vswap! state update el merge {:current vdom\n                                         :rendering? false})\n          (when-let [pending (:queued (get @state el))]\n            (js/requestAnimationFrame #(render el pending))\n            (vswap! state update el dissoc :queued))))))\n  el)\n\n(defn ^:export unmount\n  \"Unmounts elements in `el`, and clears internal state.\"\n  [^js el]\n  (if (get-in @state [el :rendering?])\n    (js/requestAnimationFrame #(unmount el))\n    (do\n      (render el nil)\n      (vswap! state dissoc el)\n      nil)))\n\n(defn ^:export set-dispatch!\n  \"Register a global dispatch function for event handlers and life-cycle hooks\n  that are not functions. See data-driven event handlers and life-cycle hooks in\n  the user guide for details.\"\n  [f]\n  (set! r/*dispatch* f))\n"],"x_google_ignoreList":[0]}